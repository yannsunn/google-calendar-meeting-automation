{
  "name": "Google Calendar 自動同期 - 完全版",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [{"field": "hours", "hoursInterval": 1}]
        }
      },
      "name": "1時間ごとに実行",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "id": "schedule"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "Authorization", "value": "Bearer <YOUR_GOOGLE_ACCESS_TOKEN>"}
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {"name": "timeMin", "value": "={{new Date().toISOString()}}"},
            {"name": "timeMax", "value": "={{new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()}}"},
            {"name": "singleEvents", "value": "true"},
            {"name": "orderBy", "value": "startTime"},
            {"name": "maxResults", "value": "100"}
          ]
        },
        "options": {}
      },
      "name": "Google Calendar API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 300],
      "id": "googleCalendarApi"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst events = items[0].json.items || [];\nconst internalDomains = ['gmail.com', 'googlemail.com', 'yasuus-projects.vercel.app'];\n\nreturn events.map(event => {\n  const attendees = (event.attendees || []).map(a => ({\n    email: a.email,\n    name: a.displayName || a.email.split('@')[0],\n    response: a.responseStatus || 'needsAction',\n    is_organizer: a.organizer || false,\n    domain: a.email.split('@')[1]\n  }));\n  \n  const externalAttendees = attendees.filter(a => !internalDomains.includes(a.domain));\n  const start = new Date(event.start?.dateTime || event.start?.date);\n  const end = new Date(event.end?.dateTime || event.end?.date);\n  const durationMinutes = (end - start) / 1000 / 60;\n  \n  return {\n    json: {\n      event_id: event.id,\n      summary: event.summary || 'タイトルなし',\n      description: event.description || '',\n      start_time: event.start?.dateTime || event.start?.date,\n      end_time: event.end?.dateTime || event.end?.date,\n      location: event.location || '',\n      meeting_url: event.hangoutLink || '',\n      organizer_email: event.organizer?.email || '',\n      attendees: attendees,\n      external_attendees: externalAttendees,\n      has_external_attendees: externalAttendees.length > 0,\n      external_count: externalAttendees.length,\n      duration_minutes: durationMinutes,\n      is_important: durationMinutes >= 30 && externalAttendees.length > 0,\n      status: event.status || 'confirmed',\n      raw_data: event,\n      synced_at: new Date().toISOString()\n    }\n  };\n});"
      },
      "name": "データ整形+外部判定",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300],
      "id": "formatData"
    },
    {
      "parameters": {
        "url": "https://dpqsipbppdemgfwuihjr.supabase.co/rest/v1/calendar_events",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "apikey", "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwcXNpcGJwcGRlbWdmd3VpaGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzIzMzksImV4cCI6MjA3Mzk0ODMzOX0.Ke1gylvBOHU3XukM_IeQS3K9yM719qhgDbaqzDupy_Y"},
            {"name": "Authorization", "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwcXNpcGJwcGRlbWdmd3VpaGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzIzMzksImV4cCI6MjA3Mzk0ODMzOX0.Ke1gylvBOHU3XukM_IeQS3K9yM719qhgDbaqzDupy_Y"},
            {"name": "Content-Type", "value": "application/json"},
            {"name": "Prefer", "value": "resolution=merge-duplicates"}
          ]
        },
        "sendBody": true,
        "bodyParameters": {"parameters": [{"name": "={{$json}}"}]},
        "options": {}
      },
      "name": "Supabase保存",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 300],
      "id": "saveToSupabase"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [{"value1": "={{$json.has_external_attendees}}", "value2": true}]
        }
      },
      "name": "外部参加者チェック",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1050, 300],
      "id": "checkExternal"
    },
    {
      "parameters": {
        "jsCode": "const externalAttendees = $json.external_attendees || [];\nconst companies = {};\n\nexternalAttendees.forEach(attendee => {\n  const domain = attendee.domain;\n  if (!companies[domain]) {\n    companies[domain] = {\n      domain: domain,\n      company_name: domain.replace(/\\.(com|co\\.jp|jp|net|org)$/, ''),\n      attendees: []\n    };\n  }\n  companies[domain].attendees.push(attendee);\n});\n\nconst companyList = Object.values(companies);\n\nreturn companyList.map(company => ({\n  json: {\n    event_id: $json.event_id,\n    meeting_title: $json.summary,\n    meeting_start: $json.start_time,\n    company_domain: company.domain,\n    company_name: company.company_name,\n    attendees_from_company: company.attendees,\n    search_query: `${company.company_name} 企業情報 事業内容 業界`,\n    timestamp: new Date().toISOString()\n  }\n}));"
      },
      "name": "企業ドメイン抽出",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 200],
      "id": "extractCompanies"
    },
    {
      "parameters": {
        "url": "https://google.serper.dev/search",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "X-API-KEY", "value": "YOUR_SERPER_API_KEY"},
            {"name": "Content-Type", "value": "application/json"}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"q\": \"{{ $json.search_query }}\", \"num\": 5}",
        "options": {}
      },
      "name": "Web検索",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1450, 200],
      "id": "webSearch"
    },
    {
      "parameters": {
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyCsS0hCzYk_ISXO4uzlU91Iz6eOfkLozss",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [{"name": "Content-Type", "value": "application/json"}]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"contents\": [{\"parts\": [{\"text\": \"以下の企業情報を分析して、日本語で簡潔にまとめてください。\\n\\n企業名: {{ $json.company_name }}\\nドメイン: {{ $json.company_domain }}\\n\\nWeb検索結果:\\n{{ JSON.stringify($('Web検索').item.json) }}\\n\\n以下の形式でまとめてください:\\n1. 企業概要（2-3文）\\n2. 主要事業（箇条書き）\\n3. 業界・規模\\n4. 特徴・強み\"}]}], \"generationConfig\": {\"temperature\": 0.7, \"maxOutputTokens\": 1000}}",
        "options": {}
      },
      "name": "Gemini企業分析",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1650, 200],
      "id": "geminiAnalysis"
    },
    {
      "parameters": {
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=AIzaSyCsS0hCzYk_ISXO4uzlU91Iz6eOfkLozss",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [{"name": "Content-Type", "value": "application/json"}]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"contents\": [{\"parts\": [{\"text\": \"以下の企業に対して、AI・業務効率化ツールの提案を作成してください。\\n\\n【企業情報】\\n{{ $('Gemini企業分析').item.json.candidates[0].content.parts[0].text }}\\n\\n【会議情報】\\n会議タイトル: {{ $('企業ドメイン抽出').item.json.meeting_title }}\\n開始時刻: {{ $('企業ドメイン抽出').item.json.meeting_start }}\\n\\n【提案内容】\\n以下の4つの観点から提案を作成してください：\\n1. 業務効率化ツールの提案\\n2. ホームページ作成・改善提案\\n3. チャットボット導入提案\\n4. AI活用提案\\n\\n各提案は具体的な導入メリット、想定コスト、導入期間を含めてください。\"}]}], \"generationConfig\": {\"temperature\": 0.8, \"maxOutputTokens\": 2000}}",
        "options": {}
      },
      "name": "Gemini提案生成",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1850, 200],
      "id": "geminiProposal"
    },
    {
      "parameters": {
        "jsCode": "const companyAnalysis = $('Gemini企業分析').item.json.candidates?.[0]?.content?.parts?.[0]?.text || '';\nconst proposal = $json.candidates?.[0]?.content?.parts?.[0]?.text || '';\nconst searchResults = $('Web検索').item.json;\n\nreturn [{\n  json: {\n    event_id: $('企業ドメイン抽出').item.json.event_id,\n    company_domain: $('企業ドメイン抽出').item.json.company_domain,\n    company_name: $('企業ドメイン抽出').item.json.company_name,\n    company_analysis: companyAnalysis,\n    proposal_content: proposal,\n    search_results: searchResults,\n    status: 'generated',\n    generated_at: new Date().toISOString()\n  }\n}];"
      },
      "name": "提案データ整形",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2050, 200],
      "id": "formatProposal"
    },
    {
      "parameters": {
        "url": "https://dpqsipbppdemgfwuihjr.supabase.co/rest/v1/proposals",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "apikey", "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwcXNpcGJwcGRlbWdmd3VpaGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzIzMzksImV4cCI6MjA3Mzk0ODMzOX0.Ke1gylvBOHU3XukM_IeQS3K9yM719qhgDbaqzDupy_Y"},
            {"name": "Authorization", "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwcXNpcGJwcGRlbWdmd3VpaGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzIzMzksImV4cCI6MjA3Mzk0ODMzOX0.Ke1gylvBOHU3XukM_IeQS3K9yM719qhgDbaqzDupy_Y"},
            {"name": "Content-Type", "value": "application/json"},
            {"name": "Prefer", "value": "return=representation"}
          ]
        },
        "sendBody": true,
        "bodyParameters": {"parameters": [{"name": "={{$json}}"}]},
        "options": {}
      },
      "name": "提案保存",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2250, 200],
      "id": "saveProposal"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {"name": "status", "value": "success"},
            {"name": "message", "value": "外部参加者なし"}
          ]
        },
        "options": {}
      },
      "name": "外部参加者なし",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1250, 400],
      "id": "noExternal"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {"name": "status", "value": "complete"},
            {"name": "message", "value": "完了"}
          ]
        },
        "options": {}
      },
      "name": "実行結果",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [2450, 300],
      "id": "result"
    }
  ],
  "connections": {
    "1時間ごとに実行": {"main": [[{"node": "Google Calendar API", "type": "main", "index": 0}]]},
    "Google Calendar API": {"main": [[{"node": "データ整形+外部判定", "type": "main", "index": 0}]]},
    "データ整形+外部判定": {"main": [[{"node": "Supabase保存", "type": "main", "index": 0}]]},
    "Supabase保存": {"main": [[{"node": "外部参加者チェック", "type": "main", "index": 0}]]},
    "外部参加者チェック": {"main": [[{"node": "企業ドメイン抽出", "type": "main", "index": 0}], [{"node": "外部参加者なし", "type": "main", "index": 0}]]},
    "企業ドメイン抽出": {"main": [[{"node": "Web検索", "type": "main", "index": 0}]]},
    "Web検索": {"main": [[{"node": "Gemini企業分析", "type": "main", "index": 0}]]},
    "Gemini企業分析": {"main": [[{"node": "Gemini提案生成", "type": "main", "index": 0}]]},
    "Gemini提案生成": {"main": [[{"node": "提案データ整形", "type": "main", "index": 0}]]},
    "提案データ整形": {"main": [[{"node": "提案保存", "type": "main", "index": 0}]]},
    "提案保存": {"main": [[{"node": "実行結果", "type": "main", "index": 0}]]},
    "外部参加者なし": {"main": [[{"node": "実行結果", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "active": true
}
